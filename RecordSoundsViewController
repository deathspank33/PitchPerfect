//
//  RecordSoundsViewController.swift
//  PitchPerfect
//
//  Created by Troy Davis on 5/12/18.
//  Copyright Â© 2018 Troy Davis. All rights reserved.
//

import UIKit
import AVFoundation

class RecordSoundsViewController: UIViewController, AVAudioRecorderDelegate {
    
    var audioRecorder: AVAudioRecorder!
    
    //MARK: END Assignment 1.

    var recordingAudio = false
    
    @IBOutlet weak var recordingLabel: UILabel!
    @IBOutlet weak var recordButton: UIButton!
    @IBOutlet weak var stopRecordButton: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        stopRecordButton.isEnabled = false
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        recordingAudio = false
    }
    
    func endAssigment () {
        if recordingAudio == true {
            recordingLabel.text = "Recording in progress."
            recordButton.isEnabled = false
            stopRecordButton.isEnabled = true
        }else{
            recordingLabel.text = "Tap to Record."
            recordButton.isEnabled = true
            stopRecordButton.isEnabled = false
        }
    }
    //MARK: Second Screen, Recording in progress
    @IBAction func recordAudio(_ sender: AnyObject) {
        //MARK: END Assignment 2.a
        recordingAudio = true
        endAssigment()
        //MARK: END Assignment 2.b
        
        let dirPath = NSSearchPathForDirectoriesInDomains(.documentDirectory,.userDomainMask, true)[0] as String
        let recordingName = "recordedVoice.wav"
        let pathArray = [dirPath, recordingName]
        let filePath = URL(string: pathArray.joined(separator: "/"))
        
        let session = AVAudioSession.sharedInstance()
        try! session.setCategory(AVAudioSessionCategoryPlayAndRecord, with: .defaultToSpeaker)
        
        try! audioRecorder = AVAudioRecorder(url: filePath!, settings: [:])
        audioRecorder.delegate = self
        audioRecorder.isMeteringEnabled = true
        audioRecorder.prepareToRecord()
        audioRecorder.record()
    }
    //MARK: First Screen, load out Tap to Record
    @IBAction func stopRecording(_ sender: AnyObject) {
        
        audioRecorder.stop()
        let audiosession = AVAudioSession.sharedInstance()
        try! audiosession.setActive(false)
    }

    func audioRecorderDidFinishRecording(_ recorder: AVAudioRecorder, successfully flag: Bool) {
        if flag {
            performSegue(withIdentifier: "stopRecording" , sender: audioRecorder.url)
        }else{
            print("recording was not successful")
       }
    }

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "stopRecording" {
            let playSoundsVC = segue.destination as! playSoundsViewController
            let recordedAudioURL = sender as! URL
            playSoundsVC.recordedAudioURL = recordedAudioURL
        }

    }

}
